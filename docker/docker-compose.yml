version: '3.8'

services:
  api:
    build: 
      context: ../backend
      dockerfile: ../docker/backend/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ../backend:/app
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/rental_properties
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SECRET_KEY=${SECRET_KEY}
      - ENVIRONMENT=development
    depends_on:
      - db
      - redis
    networks:
      - app-network
      - monitoring

  db:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=rental_properties
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  frontend:
    build:
      context: ..
      dockerfile: docker/frontend/Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - api
    networks:
      - app-network

  nginx:
    image: nginx:1.25
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ../frontend/dist:/usr/share/nginx/html
    depends_on:
      - api
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
  monitoring:
    external: true

volumes:
  postgres_data:
  redis_data:
