name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: rental_properties_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r frontend-next/backend/requirements.txt
        pip install -r frontend-next/requirements-dev.txt
        pip install pytest-cov coverage

    - name: Run tests with coverage
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/rental_properties_test
        SECRET_KEY: test_secret_key
        ENVIRONMENT: test
        CLERK_SECRET_KEY: test_clerk_secret_key
        CLERK_PUBLISHABLE_KEY: test_clerk_publishable_key
        BACKEND_CORS_ORIGINS: '["http://localhost:3000"]'
      run: |
        cd frontend-next/backend
        pytest --cov=app --cov-report=xml --cov-report=term-missing:skip-covered

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./frontend-next/backend/coverage.xml
        flags: backend
        name: backend-python
        fail_ci_if_error: false
        verbose: true

  frontend-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend-next/package-lock.json

    - name: Install dependencies
      run: |
        cd frontend-next
        npm ci

    - name: Run tests with coverage
      run: |
        cd frontend-next
        npm test -- --coverage --watchAll=false --ci

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./frontend-next/coverage/coverage-final.json
        flags: frontend
        name: frontend-typescript
        fail_ci_if_error: false
        verbose: true

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy

    - name: Run Python linters
      run: |
        cd frontend-next/backend
        flake8 .
        black --check .
        isort --check-only .
        mypy .

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend-next/package-lock.json

    - name: Install frontend dependencies
      run: |
        cd frontend-next
        npm ci

    - name: Run frontend linters
      run: |
        cd frontend-next
        npm run lint

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: Run security checks
      run: |
        cd frontend-next/backend
        bandit -r .
        safety check

    - name: Run OWASP Dependency-Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'Rental Properties'
        path: '.'
        format: 'HTML'

    - name: Upload dependency check report
      uses: actions/upload-artifact@v3
      with:
        name: Dependency Check Report
        path: reports
